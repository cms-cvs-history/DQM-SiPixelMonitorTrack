process SiPixelMonitorTrackProcess = {
  # initialize MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  # global tracker or detector geometry
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  # include "Geometry/TrackerRecoData/data/trackerRecoGeometryXML.cfi"
  # include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"
  # 
  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  
  # tracker numbering
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  # strip parameter estimator service for SiStripRecHitConverter
  include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"

  untracked PSet maxEvents = { 
    untracked int32 input = -1 
  }
  source = PoolSource { 
    untracked vstring fileNames = { 
      '/store/mc/2007/10/17/RelVal-RelValSingleMuPlusPt1000-1192637292/0000/8863B9F2-E47C-DC11-8A22-001617DBCF1E.root'
    }
  }
  include "CalibTracker/SiPixelESProducers/data/SiPixelFakeGainESSource.cfi"
  include "CalibTracker/Configuration/data/Tracker_FakeConditions.cff"

  # include SiPixeClusterizer
  include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"
  # 
  # include SiPixelRecHitConverter
  include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi"

  # # include SiStripClusterizer
  # include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_SimData.cfi"
  # replace SiStripNoiseServiceParameters.UseCalibDataFromDB = false
  # 
  # include SiStripRecHitConverter
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
  
  # GlobalMixedSeedGenerator
  include "RecoTracker/TkSeedGenerator/data/GlobalMixedSeeds.cff"
  
  # KFTrackCandidateMaker
  include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"
  # 
  # # CTF analytical track fit
  # include "RecoTracker/TrackProducer/data/CTFFinalFitAnalytical.cff"
  # 
  # CTF track fit with material
  include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"

  # MonitorTrackGlobal
  include "DQM/TrackerMonitorTrack/data/MonitorTrackGlobal.cfi"
  replace MonitorTrackGlobal.TrackProducer = "ctfWithMaterialTracks"

  # SiPixelMonitorTrackResiduals
  include "DQM/SiPixelMonitorTrack/data/SiPixelMonitorTrackResiduals.cfi"

  # validation
  include "Validation/RecoTrack/data/SiPixelTrackingRecHitsValid.cfi"

  # print out what data is contained in the event where the module is in the path
  module EventContentAnalyzer = EventContentAnalyzer {}

  # DQM services
  service = DaqMonitorROOTBackEnd {}

  service = LockService { 
    untracked vstring labels = { "source" } 
  }
  service = DQMShipMonitoring {
    # event-period for shipping monitoring to collector (default: 25)
    untracked uint32 period = 5
  }
  service = MonitorDaemon {
    # if true, source will automatically start DQM thread in background
    untracked bool AutoInstantiate=true
    
    # if non-negative, upon a connection problem, source will automatically
    # attempt to reconnect with a time delay specified (default: 5 seconds)
    untracked int32 reconnect_delay = 5

    # collector hostname (default: lxplus060.cern.ch)
    untracked string DestinationAddress = "lxplus204.cern.ch"
    
    # port for communicating with collector (default: 9090)
    untracked int32 SendPort = 9090

    # monitoring period in ms (i.e. how often MEs are shipped to collector; 
    # default: 1000)
    untracked int32 UpdateDelay = 5000

    # name of DQM source (default: DQMSource)
    untracked string NameAsSource = "FU0"
  }
  # schedules
  # 
  sequence localreco = {
    siPixelClusters,
    # siStripClusters,
    siPixelRecHits, 
    siStripMatchedRecHits
  } 
  sequence ckf = {
    globalMixedSeeds,
    ckfTrackCandidates,
    # ctfAnalyticalTracks,
    ctfWithMaterialTracks
  }
  sequence monitor = {
    MonitorTrackGlobal,
    SiPixelMonitorTrackResiduals
  }
  path p = {
    localreco, 
    ckf,
    # EventContentAnalyzer, 
    # PixelTrackingRecHitsValid, 
    monitor
  }
}

