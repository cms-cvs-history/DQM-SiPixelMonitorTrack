process TrackGen = {

  # initialize message logger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  
  # initialize magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
  
  # cms detector geometry
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  # include "Geometry/TrackerRecoData/data/trackerRecoGeometryXML.cfi"
  # 
  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  
  # tracker numbering
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  # strip parameter estimator service for SiStripRecHitConverter
  include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"

  service = RandomNumberGeneratorService {
    untracked uint32 sourceSeed = 98765
    PSet moduleSeeds = {
      untracked uint32 VtxSmeared = 123
      untracked uint32 g4SimHits = 456
      untracked uint32 mix = 789
      untracked uint32 siStripDigis = 246
      untracked uint32 siPixelDigis = 135
    }
  }
  service = Timing {}
  
  include "SimGeneral/HepPDTESSource/data/pdt.cfi"

  source = FlatRandomPtGunSource {
    untracked uint32 firstRun = 1
    untracked PSet PGunParameters = {
      # you can request more than 1 particle
      untracked vint32 PartID = { 13 }
      untracked double MinEta = -2.5
      untracked double MaxEta =  2.5
      untracked double MinPhi = -3.14159265358979323846 
      untracked double MaxPhi =  3.14159265358979323846
      untracked double MinPt  =  9.99
      untracked double MaxPt  = 10.01
    }
    untracked int32 Verbosity = 0 # set to 1 (or greater) for printouts
  }
  untracked PSet maxEvents = {
    untracked int32 input = 1000
  }
  # vertex Smearing
  include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
  
  # include geant4 simulation
  include "SimG4Core/Application/data/SimG4Object.cfi"
  # replace SimG4Object.Physics.type = "SimG4Core/Physics/DummyPhysics"
  # replace SimG4Object.Physics.DummyEMPhysics = true
  
  module mix = MixingModule {
    int32 bunchspace = 25
  }
  # include SiPixelDigitizer
  include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"
  # 
  # include SiPixeClusterizer
  include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"
  # 
  # include SiPixelRecHitConverter
  include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi"
  # replace siPixelRecHits.CPE = "FromDetPosition" <- "Initial" by default

  # include SiStripDigitizer
  include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"
  #   
  # include SiStripClusterizer
  include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"
  # 
  # include SiStripRecHitConverter
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
  
  # GlobalMixedSeedGenerator
  include "RecoTracker/TkSeedGenerator/data/GlobalMixedSeeds.cff"
  
  # KFTrackCandidateMaker
  include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"
  # 
  # CTF analytical track fit
  include "RecoTracker/TrackProducer/data/CTFFinalFitAnalytical.cff"
  # 
  # CTF track fit with material
  include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"
  
  # # RoadSearchSeedFinder
  # include "RecoTracker/RoadSearchSeedFinder/data/RoadSearchSeeds.cff"
  # 
  # # RoadSearchCloudMaker
  # include "RecoTracker/RoadSearchCloudMaker/data/RoadSearchClouds.cff"
  # 
  # # RoadSearchCloudCleaner
  # include "RecoTracker/RoadSearchCloudCleaner/data/CleanRoadSearchClouds.cff"
  # 
  # # RoadSearchTrackCandidateMaker
  # include "RecoTracker/RoadSearchTrackCandidateMaker/data/RoadSearchTrackCandidates.cff"
  # 
  # # RS analytical track fit
  # include "RecoTracker/TrackProducer/data/RSFinalFitAnalytical.cff"
  # 
  # # RS track fit with material 
  # include "RecoTracker/TrackProducer/data/RSFinalFitWithMaterial.cff"

  module out = PoolOutputModule { 
    untracked string fileName = "reco_ckfTrackCandidates.root"
  }
  # schedules
  # 
  sequence sim = { 
    VtxSmeared, 
    g4SimHits, mix 
  }
  sequence digi = {
    siPixelDigis,
    siStripDigis
  }
  sequence localreco = {
    siPixelClusters,
    siStripClusters,
    siPixelRecHits, 
    siStripMatchedRecHits
  } 
  sequence ckf = {
    globalMixedSeeds,
    ckfTrackCandidates,
    ctfAnalyticalTracks,
    ctfWithMaterialTracks
  }
  # sequence rs = {
  #   roadSearchSeeds,
  #   roadSearchClouds,
  #   cleanRoadSearchClouds,
  #   rsTrackCandidates,
  #   rsAnalyticalTracks,
  #   rsWithMaterialTracks
  # }
  path p = {
    sim,
    digi,
    localreco,
    ckf #, rs
  }
  endpath e = { out }
}

